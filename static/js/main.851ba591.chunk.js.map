{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","firstName","lastName","age","heartProblems","chestPain","diatbetes","dizziness","shortnessOfBreath","jointProblems","highOrLowBloodPressure","prescribedMedicine","pregnant","other","handleChange","bind","event","target","name","value","type","checked","this","setState","placeholder","onChange","diabetes","prescribedMedcine","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAmGeA,E,kDA/Fb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAW,GACXC,SAAU,GACVC,IAAK,GACLC,cAAe,GACfC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,kBAAmB,GACnBC,cAAe,GACfC,uBAAwB,GACxBC,mBAAoB,GACpBC,SAAU,GACVC,MAAO,IAIT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAnBR,E,gDAsBd,SAAaC,GAAQ,IAAD,EACmBA,EAAMC,OAApCC,EADW,EACXA,KAAMC,EADK,EACLA,MAAOC,EADF,EACEA,KAAMC,EADR,EACQA,QACjB,aAATD,EAAsBE,KAAKC,SAAL,eAAiBL,EAAQG,IAAYC,KAAKC,SAAL,eAAiBL,EAAOC,M,oBAKrF,WACE,OACE,8BACE,iCACE,uBAAOC,KAAK,OAAOD,MAAOG,KAAKtB,MAAMC,UAAWiB,KAAK,YAAYM,YAAY,aAAaC,SAAUH,KAAKR,eACzG,uBAAOM,KAAK,OAAOD,MAAOG,KAAKtB,MAAME,SAAUgB,KAAK,WAAWM,YAAY,YAAYC,SAAUH,KAAKR,eAEtG,kCACA,uBAAOM,KAAK,WAAWF,KAAK,gBAAgBG,QAASC,KAAKtB,MAAMI,cAAeqB,SAAUH,KAAKR,eAD9F,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,YAAYG,QAASC,KAAKtB,MAAMK,UAAWoB,SAAUH,KAAKR,eADtF,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,WAAWG,QAASC,KAAKtB,MAAM0B,SAAUD,SAAUH,KAAKR,eADpF,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,YAAYG,QAASC,KAAKtB,MAAMO,UAAWkB,SAAUH,KAAKR,eADtF,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,oBAAoBG,QAASC,KAAKtB,MAAMQ,kBAAmBiB,SAAUH,KAAKR,eADtG,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,gBAAgBG,QAASC,KAAKtB,MAAMS,cAAegB,SAAUH,KAAKR,eAD9F,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,yBAAyBG,QAASC,KAAKtB,MAAMU,uBAAwBe,SAAUH,KAAKR,eADhH,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,oBAAoBG,QAASC,KAAKtB,MAAM2B,kBAAmBF,SAAUH,KAAKR,eADtG,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,WAAWG,QAASC,KAAKtB,MAAMY,SAAUa,SAAUH,KAAKR,eADpF,sIAKA,kCACA,uBAAOM,KAAK,WAAWF,KAAK,QAAQG,QAASC,KAAKtB,MAAMa,MAAOY,SAAUH,KAAKR,eAD9E,+I,GAlFQc,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.851ba591.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super ()\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\",\n      heartProblems: \"\",\n      chestPain: \"\",\n      diatbetes: \"\",\n      dizziness: \"\",\n      shortnessOfBreath: \"\",\n      jointProblems: \"\",\n      highOrLowBloodPressure: \"\",\n      prescribedMedicine: \"\",\n      pregnant: \"\",\n      other: \"\"\n\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    const {name, value, type, checked} = event.target\n    type === \"checkbox\" ? this.setState({ [name] : checked }) :this.setState({ [name]: value })\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input type=\"text\" value={this.state.firstName} name=\"firstName\" placeholder=\"first name\" onChange={this.handleChange}/>\n          <input type=\"text\" value={this.state.lastName} name=\"lastName\" placeholder=\"last name\" onChange={this.handleChange}/>\n\n          <label>\n          <input type=\"checkbox\" name=\"heartProblems\" checked={this.state.heartProblems} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"chestPain\" checked={this.state.chestPain} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"diabetes\" checked={this.state.diabetes} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"dizziness\" checked={this.state.dizziness} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"shortnessOfBreath\" checked={this.state.shortnessOfBreath} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"jointProblems\" checked={this.state.jointProblems} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"highOrLowBloodPressure\" checked={this.state.highOrLowBloodPressure} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"prescribedMedcine\" checked={this.state.prescribedMedcine} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"pregnant\" checked={this.state.pregnant} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n          <label>\n          <input type=\"checkbox\" name=\"other\" checked={this.state.other} onChange={this.handleChange}/>\n          Has your doctor ever said that you have a heart condition and that you should only do physical activity recommended by a doctor?\n          </label>\n\n        </form>\n      </div>\n     \n    )\n\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}